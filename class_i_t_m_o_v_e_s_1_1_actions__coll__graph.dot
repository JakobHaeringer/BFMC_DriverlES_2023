digraph "ITMOVES::Actions"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ITMOVES::Actions\n|- P\l- oldP\l|+ Actions()\l+ ~Actions()\l+ StartUp()\l+ FollowLane()\l+ Crosswalk()\l+ Pedestrian()\l+ Stop()\l+ PriorityRoad()\l+ Intersection()\l+ RoutePlanning()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This class contains all functions for the vehicle states, auxiliary functions and an instance of the ..."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +duration" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{TimeToWait\n|+ startUp\l+ stop\l+ pedestrian\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_time_to_wait.html",tooltip="This struct defines various time parameters specified in seconds [s] for the actions."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -AStar" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{AStarAlgorithm\n|- m_path\l|+ AStarAlgorithm()\l+ aStarAlgorithm()\l+ getPath()\l+ getReadFile()\l- heuristic()\l- tolerancX()\l- tolerancY()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_a_star_algorithm.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{ReadFile\n|# m_nodes\l# graphMlFile\l# m_filename\l# m_currentLine\l|+ ReadFile()\l+ ReadFile()\l+ readFile()\l+ setFilename()\l+ getNodes()\l+ exportMapToInl()\l# readNodeDataFromFile()\l# readEdgeDataFromFile()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_read_file.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #m_currentNode" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{NodeData\n|+ m_id\l+ m_x\l+ m_y\l+ m_crossLine\l+ connectedNodes\l|+ NodeData()\l+ NodeData()\l+ operator\<()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_node_data.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -m_readFile" ,arrowhead="odiamond",fontname="Helvetica"];
}
